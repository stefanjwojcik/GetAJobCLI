name: Build and Release GetAJobCLI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: 'false'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: getajobcli-linux-x86_64
            executable_extension: ""
          - os: macos-latest
            artifact_name: getajobcli-macos-x86_64
            executable_extension: ""
          - os: windows-latest
            artifact_name: getajobcli-windows-x86_64
            executable_extension: ".exe"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: '1.9'
        arch: x64

    - name: Cache Julia packages
      uses: actions/cache@v3
      with:
        path: ~/.julia
        key: ${{ runner.os }}-julia-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-julia-

    - name: Install dependencies
      run: |
        julia --project=. -e "using Pkg; Pkg.instantiate()"

    - name: Add PackageCompiler
      run: |
        julia --project=. -e "using Pkg; Pkg.add(\"PackageCompiler\")"

    - name: Test precompilation workload
      run: |
        julia --project=. precompile_workload.jl

    - name: Build application
      run: |
        julia --project=. build_app.jl

    - name: Create distribution archive (Unix)
      if: runner.os != 'Windows'
      run: |
        mkdir -p dist
        tar -czf dist/${{ matrix.artifact_name }}.tar.gz -C build getajobcli

    - name: Create distribution archive (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir dist
        Compress-Archive -Path build/getajobcli -DestinationPath dist/${{ matrix.artifact_name }}.zip

    - name: Upload Unix artifact
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.artifact_name }}.tar.gz

    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.artifact_name }}.zip

    - name: Test executable (Unix)
      if: runner.os != 'Windows'
      run: |
        ./build/getajobcli/bin/getajobcli --version || echo "Version command not available"
        echo "Executable test completed"

    - name: Test executable (Windows)
      if: runner.os == 'Windows'
      run: |
        & "./build/getajobcli/bin/getajobcli.exe" --version
        if (-not $?) { Write-Host "Version command not available" }
        Write-Host "Executable test completed"

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.create_release == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release Notes
      run: |
        cat > release_notes.md << 'EOF'
        # GetAJobCLI Release
        
        This release includes standalone executables for Linux, macOS, and Windows.
        
        ## Installation
        
        ### Quick Install (recommended)
        ```bash
        curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
        ```
        
        ### Manual Install
        1. Download the appropriate archive for your platform
        2. Extract the archive
        3. Run the executable from the `bin/` directory
        
        ## Supported Platforms
        - Linux x86_64
        - macOS x86_64  
        - Windows x86_64
        
        ## Getting Started
        1. Run `getajobcli` to start the interactive CLI
        2. Use `setup-keys` to configure your OpenAI/Anthropic API keys
        3. Try `help` to see available commands
        
        ## What's New
        - Standalone executables (no Julia installation required)
        - Faster startup with precompiled dependencies
        - Cross-platform support
        - Easy installation script
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          getajobcli-linux-x86_64/getajobcli-linux-x86_64.tar.gz
          getajobcli-macos-x86_64/getajobcli-macos-x86_64.tar.gz
          getajobcli-windows-x86_64/getajobcli-windows-x86_64.zip
        body_path: release_notes.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-install:
    name: Test Installation Script
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: '1.9'
        
    - name: Test install script
      run: |
        chmod +x install.sh
        ./install.sh --method=dev
        
    - name: Verify installation
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        which getajobcli || echo "Installation test completed"